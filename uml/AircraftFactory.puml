@startuml
'https://plantuml.com/class-diagram

abstract class BaseGame{}

BaseGame --> AircraftFactory
BaseGame --> AbstractAircraft

abstract class AbstractAircraft{
    # maxHp:int
    # hp:int
    # shootNum:int
    # power:int
    # direction:int
    # score:int

    + AbstractAircraft(int locationX, int locationY, int speedX, int speedY, int hp)
    + getHp():int
    + getShootNum():int
    + getPower():int
    + getDirection():int
    + getScore():int
    + setShootNum(int shootNum):void
    + setHp(int hp):void
    + {abstract} shoot():List<BaseBullet>
    + clear():int
}

interface AircraftFactory
{
    createAircraft():AbstractAircraft
}

AbstractAircraft <|-- MobEnemy
AbstractAircraft <|-- EliteEnemy
AbstractAircraft <|-- BossEnemy

AircraftFactory <|.. MobEnemyFactory
AircraftFactory <|.. EliteEnemyFactory
AircraftFactory <|.. BossEnemyFactory

MobEnemy <.. MobEnemyFactory
EliteEnemy <.. EliteEnemyFactory
BossEnemy <.. BossEnemyFactory

class MobEnemy{
    - ShootContext shootContext;

    + MobEnemy(int locationX, int locationY, int speedX, int speedY, int hp)
    + forward():void
    + shoot():List<BaseBullet>
}

class EliteEnemy{
    - shootContext:ShootContext
    - dropRate:double

    + EliteEnemy(int locationX, int locationY, int speedX, int speedY, int hp, int power)
    + forward():void
    + createProp():AbstractProp
    + shoot():List<BaseBullet>
    + getDropRate():double
}

class BossEnemy{
    - {static} bossEnemy:BossEnemy
    - thread:MusicThread
    - shootContext:ShootContext
    - {static} growTime:int

    - BossEnemy(int locationX, int locationY, int speedX, int speedY, int hp, int power)
    + {static} getInstance(boolean ifGrow):BossEnemy
    + {static} isNull:boolean
    + vanish():void
    + shoot():List<BaseBullet>
    + createProp():AbstractProp
}

class MobEnemyFactory {
    - {static} rate:double
    - {static} hp:int

    + createAircraft():AbstractAircraft
    + {static} setRate(double rate):void
    + {static} setHp(int hp):void
}

class EliteEnemyFactory {
    - {static} rate:double
    - {static} hp:int
    - {static} power:int

    - random():int
    + createAircraft():AbstractAircraft
    + {static} setRate(double rate):void
    + {static} setHp(int hp):void
    + {static} setPower(int power):void
}

class BossEnemyFactory{
    - {static} ifStrength:boolean

    + createAircraft():AbstractAircraft
    + {static} setIfStrength(boolean ifStrength):void
}

@enduml